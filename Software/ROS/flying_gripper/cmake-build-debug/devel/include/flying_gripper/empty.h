// Generated by gencpp from file flying_gripper/empty.msg
// DO NOT EDIT!


#ifndef FLYING_GRIPPER_MESSAGE_EMPTY_H
#define FLYING_GRIPPER_MESSAGE_EMPTY_H

#include <ros/service_traits.h>


#include <flying_gripper/emptyRequest.h>
#include <flying_gripper/emptyResponse.h>


namespace flying_gripper
{

struct empty
{

typedef emptyRequest Request;
typedef emptyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct empty
} // namespace flying_gripper


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::flying_gripper::empty > {
  static const char* value()
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const ::flying_gripper::empty&) { return value(); }
};

template<>
struct DataType< ::flying_gripper::empty > {
  static const char* value()
  {
    return "flying_gripper/empty";
  }

  static const char* value(const ::flying_gripper::empty&) { return value(); }
};


// service_traits::MD5Sum< ::flying_gripper::emptyRequest> should match
// service_traits::MD5Sum< ::flying_gripper::empty >
template<>
struct MD5Sum< ::flying_gripper::emptyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::flying_gripper::empty >::value();
  }
  static const char* value(const ::flying_gripper::emptyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::flying_gripper::emptyRequest> should match
// service_traits::DataType< ::flying_gripper::empty >
template<>
struct DataType< ::flying_gripper::emptyRequest>
{
  static const char* value()
  {
    return DataType< ::flying_gripper::empty >::value();
  }
  static const char* value(const ::flying_gripper::emptyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::flying_gripper::emptyResponse> should match
// service_traits::MD5Sum< ::flying_gripper::empty >
template<>
struct MD5Sum< ::flying_gripper::emptyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::flying_gripper::empty >::value();
  }
  static const char* value(const ::flying_gripper::emptyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::flying_gripper::emptyResponse> should match
// service_traits::DataType< ::flying_gripper::empty >
template<>
struct DataType< ::flying_gripper::emptyResponse>
{
  static const char* value()
  {
    return DataType< ::flying_gripper::empty >::value();
  }
  static const char* value(const ::flying_gripper::emptyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FLYING_GRIPPER_MESSAGE_EMPTY_H
